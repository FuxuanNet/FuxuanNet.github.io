"use strict";var Xe=Object.create;var Z=Object.defineProperty;var et=Object.getOwnPropertyDescriptor;var tt=Object.getOwnPropertyNames;var it=Object.getPrototypeOf,nt=Object.prototype.hasOwnProperty;var st=(s,e)=>()=>(e||s((e={exports:{}}).exports,e),e.exports),ot=(s,e)=>{for(var i in e)Z(s,i,{get:e[i],enumerable:!0})},ye=(s,e,i,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of tt(e))!nt.call(s,n)&&n!==i&&Z(s,n,{get:()=>e[n],enumerable:!(t=et(e,n))||t.enumerable});return s};var at=(s,e,i)=>(i=s!=null?Xe(it(s)):{},ye(e||!s||!s.__esModule?Z(i,"default",{value:s,enumerable:!0}):i,s)),rt=s=>ye(Z({},"__esModule",{value:!0}),s);var Qe=st(d=>{"use strict";Object.defineProperty(d,"__esModule",{value:!0});var w=require("obsidian"),ce="YYYY-MM-DD",pe="gggg-[W]ww",xe="YYYY-MM",Re="YYYY-[Q]Q",Oe="YYYY";function H(s){var i,t;let e=window.app.plugins.getPlugin("periodic-notes");return e&&((t=(i=e.settings)==null?void 0:i[s])==null?void 0:t.enabled)}function Y(){var s,e,i,t;try{let{internalPlugins:n,plugins:o}=window.app;if(H("daily")){let{format:u,folder:l,template:h}=((e=(s=o.getPlugin("periodic-notes"))==null?void 0:s.settings)==null?void 0:e.daily)||{};return{format:u||ce,folder:(l==null?void 0:l.trim())||"",template:(h==null?void 0:h.trim())||""}}let{folder:a,format:r,template:g}=((t=(i=n.getPluginById("daily-notes"))==null?void 0:i.instance)==null?void 0:t.options)||{};return{format:r||ce,folder:(a==null?void 0:a.trim())||"",template:(g==null?void 0:g.trim())||""}}catch(n){console.info("No custom daily note settings found!",n)}}function j(){var s,e,i,t,n,o,a;try{let r=window.app.plugins,g=(s=r.getPlugin("calendar"))==null?void 0:s.options,u=(i=(e=r.getPlugin("periodic-notes"))==null?void 0:e.settings)==null?void 0:i.weekly;if(H("weekly"))return{format:u.format||pe,folder:((t=u.folder)==null?void 0:t.trim())||"",template:((n=u.template)==null?void 0:n.trim())||""};let l=g||{};return{format:l.weeklyNoteFormat||pe,folder:((o=l.weeklyNoteFolder)==null?void 0:o.trim())||"",template:((a=l.weeklyNoteTemplate)==null?void 0:a.trim())||""}}catch(r){console.info("No custom weekly note settings found!",r)}}function q(){var e,i,t,n;let s=window.app.plugins;try{let o=H("monthly")&&((i=(e=s.getPlugin("periodic-notes"))==null?void 0:e.settings)==null?void 0:i.monthly)||{};return{format:o.format||xe,folder:((t=o.folder)==null?void 0:t.trim())||"",template:((n=o.template)==null?void 0:n.trim())||""}}catch(o){console.info("No custom monthly note settings found!",o)}}function W(){var e,i,t,n;let s=window.app.plugins;try{let o=H("quarterly")&&((i=(e=s.getPlugin("periodic-notes"))==null?void 0:e.settings)==null?void 0:i.quarterly)||{};return{format:o.format||Re,folder:((t=o.folder)==null?void 0:t.trim())||"",template:((n=o.template)==null?void 0:n.trim())||""}}catch(o){console.info("No custom quarterly note settings found!",o)}}function J(){var e,i,t,n;let s=window.app.plugins;try{let o=H("yearly")&&((i=(e=s.getPlugin("periodic-notes"))==null?void 0:e.settings)==null?void 0:i.yearly)||{};return{format:o.format||Oe,folder:((t=o.folder)==null?void 0:t.trim())||"",template:((n=o.template)==null?void 0:n.trim())||""}}catch(o){console.info("No custom yearly note settings found!",o)}}function ze(...s){let e=[];for(let t=0,n=s.length;t<n;t++)e=e.concat(s[t].split("/"));let i=[];for(let t=0,n=e.length;t<n;t++){let o=e[t];!o||o==="."||i.push(o)}return e[0]===""&&i.unshift(""),i.join("/")}function mt(s){let e=s.substring(s.lastIndexOf("/")+1);return e.lastIndexOf(".")!=-1&&(e=e.substring(0,e.lastIndexOf("."))),e}async function ht(s){let e=s.replace(/\\/g,"/").split("/");if(e.pop(),e.length){let i=ze(...e);window.app.vault.getAbstractFileByPath(i)||await window.app.vault.createFolder(i)}}async function Q(s,e){e.endsWith(".md")||(e+=".md");let i=w.normalizePath(ze(s,e));return await ht(i),i}async function M(s){let{metadataCache:e,vault:i}=window.app,t=w.normalizePath(s);if(t==="/")return Promise.resolve(["",null]);try{let n=e.getFirstLinkpathDest(t,""),o=await i.cachedRead(n),a=window.app.foldManager.load(n);return[o,a]}catch(n){return console.error(`Failed to read the daily note template '${t}'`,n),new w.Notice("Failed to read the daily note template"),["",null]}}function C(s,e="day"){let i=s.clone().startOf(e).format();return`${e}-${i}`}function Ve(s){return s.replace(/\[[^\]]*\]/g,"")}function ft(s,e){if(e==="week"){let i=Ve(s);return/w{1,2}/i.test(i)&&(/M{1,4}/.test(i)||/D{1,4}/.test(i))}return!1}function I(s,e){return Ue(s.basename,e)}function bt(s,e){return Ue(mt(s),e)}function Ue(s,e){let t={day:Y,week:j,month:q,quarter:W,year:J}[e]().format.split("/").pop(),n=window.moment(s,t,!0);if(!n.isValid())return null;if(ft(t,e)&&e==="week"){let o=Ve(t);if(/w{1,2}/i.test(o))return window.moment(s,t.replace(/M{1,4}/g,"").replace(/D{1,4}/g,""),!1)}return n}var me=class extends Error{};async function _e(s){let e=window.app,{vault:i}=e,t=window.moment,{template:n,format:o,folder:a}=Y(),[r,g]=await M(n),u=s.format(o),l=await Q(a,u);try{let h=await i.create(l,r.replace(/{{\s*date\s*}}/gi,u).replace(/{{\s*time\s*}}/gi,t().format("HH:mm")).replace(/{{\s*title\s*}}/gi,u).replace(/{{\s*(date|time)\s*(([+-]\d+)([yqmwdhs]))?\s*(:.+?)?}}/gi,(P,p,y,b,m,f)=>{let se=t(),oe=s.clone().set({hour:se.get("hour"),minute:se.get("minute"),second:se.get("second")});return y&&oe.add(parseInt(b,10),m),f?oe.format(f.substring(1).trim()):oe.format(o)}).replace(/{{\s*yesterday\s*}}/gi,s.clone().subtract(1,"day").format(o)).replace(/{{\s*tomorrow\s*}}/gi,s.clone().add(1,"d").format(o)));return e.foldManager.save(h,g),h}catch(h){console.error(`Failed to create file: '${l}'`,h),new w.Notice("Unable to create new file.")}}function wt(s,e){var i;return(i=e[C(s,"day")])!=null?i:null}function yt(){let{vault:s}=window.app,{folder:e}=Y(),i=s.getAbstractFileByPath(w.normalizePath(e));if(!i)throw new me("Failed to find daily notes folder");let t={};return w.Vault.recurseChildren(i,n=>{if(n instanceof w.TFile){let o=I(n,"day");if(o){let a=C(o,"day");t[a]=n}}}),t}var he=class extends Error{};function vt(){let{moment:s}=window,e=s.localeData()._week.dow,i=["sunday","monday","tuesday","wednesday","thursday","friday","saturday"];for(;e;)i.push(i.shift()),e--;return i}function Pt(s){return vt().indexOf(s.toLowerCase())}async function He(s){let{vault:e}=window.app,{template:i,format:t,folder:n}=j(),[o,a]=await M(i),r=s.format(t),g=await Q(n,r);try{let u=await e.create(g,o.replace(/{{\s*(date|time)\s*(([+-]\d+)([yqmwdhs]))?\s*(:.+?)?}}/gi,(l,h,P,p,y,b)=>{let m=window.moment(),f=s.clone().set({hour:m.get("hour"),minute:m.get("minute"),second:m.get("second")});return P&&f.add(parseInt(p,10),y),b?f.format(b.substring(1).trim()):f.format(t)}).replace(/{{\s*title\s*}}/gi,r).replace(/{{\s*time\s*}}/gi,window.moment().format("HH:mm")).replace(/{{\s*(sunday|monday|tuesday|wednesday|thursday|friday|saturday)\s*:(.*?)}}/gi,(l,h,P)=>{let p=Pt(h);return s.weekday(p).format(P.trim())}));return window.app.foldManager.save(u,a),u}catch(u){console.error(`Failed to create file: '${g}'`,u),new w.Notice("Unable to create new file.")}}function Tt(s,e){var i;return(i=e[C(s,"week")])!=null?i:null}function Ct(){let s={};if(!je())return s;let{vault:e}=window.app,{folder:i}=j(),t=e.getAbstractFileByPath(w.normalizePath(i));if(!t)throw new he("Failed to find weekly notes folder");return w.Vault.recurseChildren(t,n=>{if(n instanceof w.TFile){let o=I(n,"week");if(o){let a=C(o,"week");s[a]=n}}}),s}var fe=class extends Error{};async function Ye(s){let{vault:e}=window.app,{template:i,format:t,folder:n}=q(),[o,a]=await M(i),r=s.format(t),g=await Q(n,r);try{let u=await e.create(g,o.replace(/{{\s*(date|time)\s*(([+-]\d+)([yqmwdhs]))?\s*(:.+?)?}}/gi,(l,h,P,p,y,b)=>{let m=window.moment(),f=s.clone().set({hour:m.get("hour"),minute:m.get("minute"),second:m.get("second")});return P&&f.add(parseInt(p,10),y),b?f.format(b.substring(1).trim()):f.format(t)}).replace(/{{\s*date\s*}}/gi,r).replace(/{{\s*time\s*}}/gi,window.moment().format("HH:mm")).replace(/{{\s*title\s*}}/gi,r));return window.app.foldManager.save(u,a),u}catch(u){console.error(`Failed to create file: '${g}'`,u),new w.Notice("Unable to create new file.")}}function St(s,e){var i;return(i=e[C(s,"month")])!=null?i:null}function Ft(){let s={};if(!qe())return s;let{vault:e}=window.app,{folder:i}=q(),t=e.getAbstractFileByPath(w.normalizePath(i));if(!t)throw new fe("Failed to find monthly notes folder");return w.Vault.recurseChildren(t,n=>{if(n instanceof w.TFile){let o=I(n,"month");if(o){let a=C(o,"month");s[a]=n}}}),s}var be=class extends Error{};async function At(s){let{vault:e}=window.app,{template:i,format:t,folder:n}=W(),[o,a]=await M(i),r=s.format(t),g=await Q(n,r);try{let u=await e.create(g,o.replace(/{{\s*(date|time)\s*(([+-]\d+)([yqmwdhs]))?\s*(:.+?)?}}/gi,(l,h,P,p,y,b)=>{let m=window.moment(),f=s.clone().set({hour:m.get("hour"),minute:m.get("minute"),second:m.get("second")});return P&&f.add(parseInt(p,10),y),b?f.format(b.substring(1).trim()):f.format(t)}).replace(/{{\s*date\s*}}/gi,r).replace(/{{\s*time\s*}}/gi,window.moment().format("HH:mm")).replace(/{{\s*title\s*}}/gi,r));return window.app.foldManager.save(u,a),u}catch(u){console.error(`Failed to create file: '${g}'`,u),new w.Notice("Unable to create new file.")}}function Nt(s,e){var i;return(i=e[C(s,"quarter")])!=null?i:null}function kt(){let s={};if(!We())return s;let{vault:e}=window.app,{folder:i}=W(),t=e.getAbstractFileByPath(w.normalizePath(i));if(!t)throw new be("Failed to find quarterly notes folder");return w.Vault.recurseChildren(t,n=>{if(n instanceof w.TFile){let o=I(n,"quarter");if(o){let a=C(o,"quarter");s[a]=n}}}),s}var we=class extends Error{};async function Bt(s){let{vault:e}=window.app,{template:i,format:t,folder:n}=J(),[o,a]=await M(i),r=s.format(t),g=await Q(n,r);try{let u=await e.create(g,o.replace(/{{\s*(date|time)\s*(([+-]\d+)([yqmwdhs]))?\s*(:.+?)?}}/gi,(l,h,P,p,y,b)=>{let m=window.moment(),f=s.clone().set({hour:m.get("hour"),minute:m.get("minute"),second:m.get("second")});return P&&f.add(parseInt(p,10),y),b?f.format(b.substring(1).trim()):f.format(t)}).replace(/{{\s*date\s*}}/gi,r).replace(/{{\s*time\s*}}/gi,window.moment().format("HH:mm")).replace(/{{\s*title\s*}}/gi,r));return window.app.foldManager.save(u,a),u}catch(u){console.error(`Failed to create file: '${g}'`,u),new w.Notice("Unable to create new file.")}}function Lt(s,e){var i;return(i=e[C(s,"year")])!=null?i:null}function Dt(){let s={};if(!Je())return s;let{vault:e}=window.app,{folder:i}=J(),t=e.getAbstractFileByPath(w.normalizePath(i));if(!t)throw new we("Failed to find yearly notes folder");return w.Vault.recurseChildren(t,n=>{if(n instanceof w.TFile){let o=I(n,"year");if(o){let a=C(o,"year");s[a]=n}}}),s}function $t(){var t,n;let{app:s}=window,e=s.internalPlugins.plugins["daily-notes"];if(e&&e.enabled)return!0;let i=s.plugins.getPlugin("periodic-notes");return i&&((n=(t=i.settings)==null?void 0:t.daily)==null?void 0:n.enabled)}function je(){var i,t;let{app:s}=window;if(s.plugins.getPlugin("calendar"))return!0;let e=s.plugins.getPlugin("periodic-notes");return e&&((t=(i=e.settings)==null?void 0:i.weekly)==null?void 0:t.enabled)}function qe(){var i,t;let{app:s}=window,e=s.plugins.getPlugin("periodic-notes");return e&&((t=(i=e.settings)==null?void 0:i.monthly)==null?void 0:t.enabled)}function We(){var i,t;let{app:s}=window,e=s.plugins.getPlugin("periodic-notes");return e&&((t=(i=e.settings)==null?void 0:i.quarterly)==null?void 0:t.enabled)}function Je(){var i,t;let{app:s}=window,e=s.plugins.getPlugin("periodic-notes");return e&&((t=(i=e.settings)==null?void 0:i.yearly)==null?void 0:t.enabled)}function Et(s){let e={day:Y,week:j,month:q,quarter:W,year:J}[s];return e()}function Mt(s,e){return{day:_e,month:Ye,week:He}[s](e)}d.DEFAULT_DAILY_NOTE_FORMAT=ce;d.DEFAULT_MONTHLY_NOTE_FORMAT=xe;d.DEFAULT_QUARTERLY_NOTE_FORMAT=Re;d.DEFAULT_WEEKLY_NOTE_FORMAT=pe;d.DEFAULT_YEARLY_NOTE_FORMAT=Oe;d.appHasDailyNotesPluginLoaded=$t;d.appHasMonthlyNotesPluginLoaded=qe;d.appHasQuarterlyNotesPluginLoaded=We;d.appHasWeeklyNotesPluginLoaded=je;d.appHasYearlyNotesPluginLoaded=Je;d.createDailyNote=_e;d.createMonthlyNote=Ye;d.createPeriodicNote=Mt;d.createQuarterlyNote=At;d.createWeeklyNote=He;d.createYearlyNote=Bt;d.getAllDailyNotes=yt;d.getAllMonthlyNotes=Ft;d.getAllQuarterlyNotes=kt;d.getAllWeeklyNotes=Ct;d.getAllYearlyNotes=Dt;d.getDailyNote=wt;d.getDailyNoteSettings=Y;d.getDateFromFile=I;d.getDateFromPath=bt;d.getDateUID=C;d.getMonthlyNote=St;d.getMonthlyNoteSettings=q;d.getPeriodicNoteSettings=Et;d.getQuarterlyNote=Nt;d.getQuarterlyNoteSettings=W;d.getTemplateInfo=M;d.getWeeklyNote=Tt;d.getWeeklyNoteSettings=j;d.getYearlyNote=Lt;d.getYearlyNoteSettings=J});var It={};ot(It,{default:()=>ne});module.exports=rt(It);var Ke=require("obsidian");var F=require("obsidian");var lt=/^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i,ae=s=>{if(typeof s!="string")throw new TypeError("Invalid argument expected string");let e=s.match(lt);if(!e)throw new Error(`Invalid argument not valid semver ('${s}' received)`);return e.shift(),e},ve=s=>s==="*"||s==="x"||s==="X",Pe=s=>{let e=parseInt(s,10);return isNaN(e)?s:e},gt=(s,e)=>typeof s!=typeof e?[String(s),String(e)]:[s,e],ut=(s,e)=>{if(ve(s)||ve(e))return 0;let[i,t]=gt(Pe(s),Pe(e));return i>t?1:i<t?-1:0},re=(s,e)=>{for(let i=0;i<Math.max(s.length,e.length);i++){let t=ut(s[i]||"0",e[i]||"0");if(t!==0)return t}return 0};var le=(s,e)=>{let i=ae(s),t=ae(e),n=i.pop(),o=t.pop(),a=re(i,t);return a!==0?a:n&&o?re(n.split("."),o.split(".")):n||o?n?-1:1:0};var S=require("obsidian"),ge=async(s,e=!0,i="")=>{let t=`https://api.github.com/repos/${s}`;try{let n=await(0,S.request)({url:t,headers:i?{Authorization:`Token ${i}`}:{}});return(await JSON.parse(n)).private}catch(n){return e&&console.log("error in isPrivateRepo",t,n),!1}},Te=async(s,e=!0,i="")=>{let t=`https://api.github.com/repos/${s}/releases`;try{let n=await(0,S.request)({url:t,headers:i?{Authorization:`Token ${i}`}:{}});return(await JSON.parse(n)).map(a=>({version:a.tag_name,prerelease:a.prerelease}))}catch(n){return e&&console.log("error in fetchReleaseVersions",t,n),null}},x=async(s,e,i=!0,t=!1,n="")=>{try{let o=s.assets.find(g=>g.name===e);if(!o)return null;let a={Accept:"application/octet-stream"};(t&&n||n)&&(a.Authorization=`Token ${n}`);let r=await(0,S.request)({url:o.url,headers:a});return r==="Not Found"||r==='{"error":"Not Found"}'?null:r}catch(o){return i&&console.log("error in grabReleaseFileFromRepository",URL,o),null}},Ce=async(s=!0)=>{let e="https://raw.githubusercontent.com/obsidianmd/obsidian-releases/HEAD/community-plugins.json";try{let i=await(0,S.request)({url:e});return i==="404: Not Found"?null:await JSON.parse(i)}catch(i){return s&&console.log("error in grabCommmunityPluginList",i),null}},Se=async(s=!0)=>{let e="https://raw.githubusercontent.com/obsidianmd/obsidian-releases/HEAD/community-css-themes.json";try{let i=await(0,S.request)({url:e});return i==="404: Not Found"?null:await JSON.parse(i)}catch(i){return s&&console.log("error in grabCommmunityThemesList",i),null}},L=async(s,e=!1,i=!1)=>{let t=`https://raw.githubusercontent.com/${s}/HEAD/theme${e?"-beta":""}.css`;try{let n=await(0,S.request)({url:t});return n==="404: Not Found"?null:n}catch(n){return i&&console.log("error in grabCommmunityThemeCssFile",n),null}},Fe=async(s,e=!0)=>{let i=`https://raw.githubusercontent.com/${s}/HEAD/manifest.json`;try{let t=await(0,S.request)({url:i});return t==="404: Not Found"?null:t}catch(t){return e&&console.log("error in grabCommmunityThemeManifestFile",t),null}},dt=s=>{let e=0;for(let i=0;i<s.length;i++)e+=s.charCodeAt(i);return e},R=s=>dt(s).toString(),O=async(s,e,i)=>{let t=await L(s,e,i);return t?R(t):"0"},ct=async(s,e,i=!0)=>{let t=`https://api.github.com/repos/${s}/commits?path=${e}&page=1&per_page=1`;try{let n=await(0,S.request)({url:t});return n==="404: Not Found"?null:JSON.parse(n)}catch(n){return i&&console.log("error in grabLastCommitInfoForAFile",n),null}},Ae=async(s,e)=>{var t;let i=await ct(s,e);return i&&i.length>0&&((t=i[0].commit.committer)!=null&&t.date)?i[0].commit.committer.date:""},ue=async(s,e,i=!1,t=!1,n=!1,o)=>{var a;try{let r=e?`https://api.github.com/repos/${s}/releases/tags/${e}`:`https://api.github.com/repos/${s}/releases`,g={Accept:"application/vnd.github.v3+json"};(n&&o||o)&&(g.Authorization=`Token ${o}`);let u=await(0,S.request)({url:r,headers:g});if(u==="404: Not Found")return null;let l=e?[JSON.parse(u)]:JSON.parse(u);return t&&console.log(`grabReleaseFromRepository for ${s}:`,l),(a=l.sort((h,P)=>le(P.tag_name,h.tag_name)).filter(h=>i||!h.prerelease)[0])!=null?a:null}catch(r){return t&&console.log(`Error in grabReleaseFromRepository for ${s}:`,r),null}};var de={pluginList:[],pluginSubListFrozenVersion:[],themesList:[],updateAtStartup:!0,updateThemesAtStartup:!0,enableAfterInstall:!0,loggingEnabled:!1,loggingPath:"BRAT-log",loggingVerboseEnabled:!1,debuggingMode:!1,notificationsEnabled:!0,personalAccessToken:""};function Ne(s,e,i="",t=""){let n=!1;s.settings.pluginList.contains(e)||(s.settings.pluginList.unshift(e),n=!0),i!==""&&s.settings.pluginSubListFrozenVersion.filter(o=>o.repo===e).length===0&&(s.settings.pluginSubListFrozenVersion.unshift({repo:e,version:i,token:t||void 0}),n=!0),n&&s.saveSettings()}function ke(s,e){return s.settings.pluginList.contains(e)}function Be(s,e,i){let t={repo:e,lastUpdate:R(i)};s.settings.themesList.unshift(t),s.saveSettings()}function Le(s,e){return!!s.settings.themesList.find(t=>t.repo===e)}function De(s,e,i){for(let t of s.settings.themesList)t.repo===e&&(t.lastUpdate=i,s.saveSettings())}var N=require("obsidian");function D(s,e){let i=new DocumentFragment,t=document.createElement("a");if(t.textContent=s,t.href=`https://github.com/${s}`,i.appendChild(t),e){let n=document.createTextNode(e);i.appendChild(n)}return i}var K=require("obsidian");function c(s,e,i=10,t){if(!s.settings.notificationsEnabled)return;let n=t?K.Platform.isDesktop?"(click=dismiss, right-click=Info)":"(click=dismiss)":"",o=new K.Notice(`BRAT
${e}
${n}`,i*1e3);t&&(o.noticeEl.oncontextmenu=()=>{t()})}var $=(s,e=!0)=>{let i=s.createEl("div");i.style.float="right",e?(i.style.padding="15px",i.style.paddingLeft="15px",i.style.paddingRight="15px",i.style.marginLeft="15px"):(i.style.padding="10px",i.style.paddingLeft="15px",i.style.paddingRight="15px");let t=i.createDiv("coffee");t.addClass("ex-twitter-span"),t.style.paddingLeft="10px";let n=t.createDiv();n.innerText="Learn more about my work at:",t.appendChild(n);let o=t.createEl("a",{href:"https://tfthacker.com"});return o.innerText="https://tfthacker.com",i};var k=class extends N.Modal{constructor(e,i,t=!1,n=!1,o="",a="",r=""){super(e.app),this.plugin=e,this.betaPlugins=i,this.address=o,this.version=a,this.privateApiKey=r,this.openSettingsTabAfterwards=t,this.useFrozenVersion=n,this.enableAfterInstall=e.settings.enableAfterInstall,this.versionSetting=null,this.addPluginButton=null}async submitForm(){if(this.address==="")return;let e=this.address.replace("https://github.com/","");e.endsWith(".git")&&(e=e.slice(0,-4));let i=this.plugin.settings.pluginSubListFrozenVersion.find(n=>n.repo===e);if(i){i.version=this.version,this.privateApiKey&&(i.token=this.privateApiKey),await this.plugin.saveSettings(),await this.betaPlugins.addPlugin(e,!1,!1,!1,this.version,!0,this.enableAfterInstall,this.privateApiKey)&&this.close();return}if(ke(this.plugin,e)){c(this.plugin,"This plugin is already in the list for beta testing",10);return}await this.betaPlugins.addPlugin(e,!1,!1,!1,this.version,!1,this.enableAfterInstall,this.privateApiKey)&&this.close()}updateVersionDropdown(e,i,t=""){e.clear(),e.addDropdown(n=>{n.addOption("","Select a version");for(let o of i)n.addOption(o.version,`${o.version} ${o.prerelease?"(Prerelease)":""}`);n.setValue(t),n.onChange(o=>{this.version=o,this.addPluginButton&&(this.version!==""?this.addPluginButton.setDisabled(!1):this.addPluginButton.setDisabled(!0))}),n.selectEl.style.width="100%"})}onOpen(){this.contentEl.createEl("h4",{text:this.useFrozenVersion?this.address?"Update frozen version of plugin:":"Github repository for frozen beta plugin:":"Github repository for beta plugin:"}),this.contentEl.createEl("form",{},e=>{e.addClass("brat-modal"),this.address&&this.useFrozenVersion&&(this.contentEl.createDiv("repository-setting",n=>{n.addClass("brat-modal"),n.createSpan({text:D(this.address)})}),this.contentEl.createEl("hr",{cls:"divider"})),(!this.address||!this.useFrozenVersion)&&new N.Setting(e).setClass("repository-setting").then(n=>{n.addText(o=>{o.setPlaceholder("Repository (example: https://github.com/GitubUserName/repository-name)"),o.setValue(this.address),o.onChange(a=>{var r,g;this.address=a.trim(),this.useFrozenVersion&&(!this.address||!this.isValidGitHubRepo(this.address))&&this.versionSetting&&(this.updateVersionDropdown(this.versionSetting,[]),this.versionSetting.settingEl.classList.add("disabled-setting"),this.versionSetting.setDisabled(!0),o.inputEl.classList.remove("valid-repository"),o.inputEl.classList.remove("invalid-repository")),this.useFrozenVersion||(this.isValidGitHubRepo(this.address)?(r=this.addPluginButton)==null||r.setDisabled(!1):(g=this.addPluginButton)==null||g.setDisabled(!0))}),o.inputEl.addEventListener("keydown",async a=>{a.key==="Enter"&&(this.address&&(this.useFrozenVersion&&this.version!==""||!this.useFrozenVersion)&&(a.preventDefault(),this.submitForm()),await this.updateVersionDropwdownEl(this.version,o))}),this.useFrozenVersion&&o.inputEl.addEventListener("blur",async()=>{await this.updateVersionDropwdownEl(this.version,o)}),o.inputEl.style.width="100%"})}),this.useFrozenVersion&&(new N.Setting(e).setClass("apikey-setting").addText(n=>{n.setPlaceholder("GitHub API key for private repository (optional)").setValue(this.privateApiKey).onChange(async o=>{this.privateApiKey=o.trim(),this.address&&await this.updateVersionDropwdownEl(this.version,n)}),n.inputEl.type="password",n.inputEl.style.width="100%"}),this.versionSetting=new N.Setting(e).setClass("version-setting").setClass("disabled-setting"),this.updateVersionDropdown(this.versionSetting,[],this.version),this.versionSetting.setDisabled(!0)),e.createDiv("modal-button-container",n=>{var o;n.createEl("label",{cls:"mod-checkbox"},a=>{let r=a.createEl("input",{attr:{tabindex:-1},type:"checkbox"});r.checked=this.enableAfterInstall,r.addEventListener("click",()=>{this.enableAfterInstall=r.checked}),a.appendText("Enable after installing the plugin")}),n.createEl("button",{attr:{type:"button"},text:"Never mind"}).addEventListener("click",()=>{this.close()}),this.addPluginButton=new N.ButtonComponent(n).setButtonText(this.useFrozenVersion&&this.address?"Change Version":"Add Plugin").setClass("mod-cta").onClick(a=>{var r;a.preventDefault(),this.address!==""&&(this.useFrozenVersion&&this.version!==""||!this.useFrozenVersion)&&((r=this.addPluginButton)==null||r.setDisabled(!0),this.submitForm())}),(this.useFrozenVersion||this.address==="")&&((o=this.addPluginButton)==null||o.setDisabled(!0))});let i=e.createDiv();i.style.borderTop="1px solid #ccc",i.style.marginTop="30px";let t=i.createSpan();t.innerHTML="BRAT by <a href='https://bit.ly/o42-twitter'>TFTHacker</a>",t.style.fontStyle="italic",i.appendChild(t),$(i,!1),window.setTimeout(()=>{let n=e.querySelectorAll(".brat-modal .setting-item-info");for(let o of Array.from(n))o.remove()},50),e.addEventListener("submit",n=>{var o;n.preventDefault(),this.address!==""&&(this.useFrozenVersion&&this.version!==""||!this.useFrozenVersion)&&((o=this.addPluginButton)==null||o.setDisabled(!0),this.submitForm())})}),this.address&&window.setTimeout(async()=>{await this.updateVersionDropwdownEl(this.version)},100)}async updateVersionDropwdownEl(e="",i){if(this.plugin.settings.debuggingMode&&console.log(`[BRAT] Updating version dropdown for ${this.address} with selected version ${e}`),this.useFrozenVersion&&this.address){this.versionSetting&&this.updateVersionDropdown(this.versionSetting,[],e);let t=this.address.replace("https://github.com/","");t.endsWith(".git")&&(t=t.slice(0,-4));let n=await Te(t,this.plugin.settings.debuggingMode,this.privateApiKey||this.plugin.settings.personalAccessToken);n&&n.length>0?(i==null||i.inputEl.classList.remove("invalid-repository"),i==null||i.inputEl.classList.add("valid-repository"),this.versionSetting&&(this.versionSetting.settingEl.classList.remove("disabled-setting"),this.versionSetting.setDisabled(!1),this.updateVersionDropdown(this.versionSetting,n,e))):(i==null||i.inputEl.classList.remove("valid-repository"),i==null||i.inputEl.classList.add("invalid-repository"),this.versionSetting&&(this.versionSetting.settingEl.classList.add("disabled-setting"),this.versionSetting.setDisabled(!0),this.addPluginButton&&(this.addPluginButton.disabled=!0)))}}onClose(){this.openSettingsTabAfterwards&&(this.plugin.app.setting.open(),this.plugin.app.setting.openTabById(this.plugin.APP_ID))}isValidGitHubRepo(e){let i=e.trim().replace(/\.git$/,"");return/^(?:https:\/\/github\.com\/)?([a-zA-Z0-9._-]+)\/([a-zA-Z0-9._-]+)$/.test(i)}};var $e=require("obsidian");async function X(){try{let s=await(0,$e.requestUrl)(`https://obsidian.md/?${Math.random()}`);return s.status>=200&&s.status<300}catch(s){return!1}}var z=class{constructor(e){this.plugin=e}displayAddNewPluginModal(e=!1,i=!1,t="",n="",o=""){new k(this.plugin,this,e,i,t,n,o).open()}async validateRepository(e,i=!1,t=!1,n="",o=""){let r=await ge(e,this.plugin.settings.debuggingMode,o||this.plugin.settings.personalAccessToken),g=await ue(e,n,i,this.plugin.settings.debuggingMode,r,o||this.plugin.settings.personalAccessToken);if(!g)return t&&(c(this.plugin,`${e}
This does not seem to be an obsidian plugin with valid releases, as there are no releases available.`,15),console.error("BRAT: validateRepository",e,i,t)),null;let u=await x(g,"manifest.json",this.plugin.settings.debuggingMode,r,o||this.plugin.settings.personalAccessToken);if(!u)return t&&(c(this.plugin,`${e}
This does not seem to be an obsidian plugin, as there is no manifest.json file.`,15),console.error("BRAT: validateRepository",e,i,t)),null;let l=JSON.parse(u);return"id"in l?"version"in l?l:(t&&c(this.plugin,`${e}
The version attribute for the release is missing from the manifest file`,15),null):(t&&c(this.plugin,`${e}
The plugin id attribute for the release is missing from the manifest file`,15),null)}async getAllReleaseFiles(e,i,t,n="",o=""){let a=await ge(e,this.plugin.settings.debuggingMode,o),r=await ue(e,n,t,this.plugin.settings.debuggingMode,a,o||this.plugin.settings.personalAccessToken);if(!r)return Promise.reject("No release found");let g=t||n!=="";return console.log({reallyGetManifestOrNot:g,version:r.tag_name}),{mainJs:await x(r,"main.js",this.plugin.settings.debuggingMode,a,o||this.plugin.settings.personalAccessToken),manifest:g?await x(r,"manifest.json",this.plugin.settings.debuggingMode,a,o||this.plugin.settings.personalAccessToken):"",styles:await x(r,"styles.css",this.plugin.settings.debuggingMode,a,o||this.plugin.settings.personalAccessToken)}}async writeReleaseFilesToPluginFolder(e,i){var o,a;let t=`${(0,F.normalizePath)(`${this.plugin.app.vault.configDir}/plugins/${e}`)}/`,{adapter:n}=this.plugin.app.vault;await n.exists(t)||await n.mkdir(t),await n.write(`${t}main.js`,(o=i.mainJs)!=null?o:""),await n.write(`${t}manifest.json`,(a=i.manifest)!=null?a:""),i.styles&&await n.write(`${t}styles.css`,i.styles)}async addPlugin(e,i=!1,t=!1,n=!1,o="",a=!1,r=this.plugin.settings.enableAfterInstall,g=""){this.plugin.settings.debuggingMode&&console.log("BRAT: addPlugin",e,i,t,n,o,a,r,g?"private":"public");let u=10,l=await this.validateRepository(e,!0,!1,o,g),h=!!l;if(h||(l=await this.validateRepository(e,!1,!0,o,g)),l===null){let p=`${e}
A manifest.json file does not exist in the latest release of the repository. This plugin cannot be installed.`;return await this.plugin.log(p,!0),c(this.plugin,p,u),!1}if(!Object.hasOwn(l,"version")){let p=`${e}
The manifest.json file in the latest release or pre-release of the repository does not have a version number in the file. This plugin cannot be installed.`;return await this.plugin.log(p,!0),c(this.plugin,p,u),!1}if(!Object.hasOwn(l,"minAppVersion")&&!(0,F.requireApiVersion)(l.minAppVersion)){let p=`Plugin: ${e}

The manifest.json for this plugin indicates that the Obsidian version of the app needs to be ${l.minAppVersion}, but this installation of Obsidian is ${F.apiVersion}. 

You will need to update your Obsidian to use this plugin or contact the plugin developer for more information.`;return await this.plugin.log(p,!0),c(this.plugin,p,30),!1}let P=async()=>{let p=await this.getAllReleaseFiles(e,l,h,o,g);if(console.log("rFiles",p),(h||p.manifest==="")&&(p.manifest=JSON.stringify(l)),this.plugin.settings.debuggingMode&&console.log("BRAT: rFiles.manifest",h,p),p.mainJs===null){let y=`${e}
The release is not complete and cannot be download. main.js is missing from the Release`;return await this.plugin.log(y,!0),c(this.plugin,y,u),null}return p};if(!i||a){let p=await P();if(p===null)return!1;if(await this.writeReleaseFilesToPluginFolder(l.id,p),a||Ne(this.plugin,e,o,g),r){let{plugins:y}=this.plugin.app,b=(0,F.normalizePath)(`${y.getPluginFolder()}/${l.id}`);await y.loadManifest(b),await y.enablePluginAndSave(l.id)}if(await this.plugin.app.plugins.loadManifests(),a)await this.reloadPlugin(l.id),await this.plugin.log(`${e} reinstalled`,!0),c(this.plugin,`${e}
Plugin has been reinstalled and reloaded.`,u);else{let y=o===""?"":` (version: ${o})`,b=`${e}${y}
The plugin has been registered with BRAT.`;r||(b+=" You may still need to enable it the Community Plugin List."),await this.plugin.log(b,!0),c(this.plugin,b,u)}}else{let p=`${this.plugin.app.vault.configDir}/plugins/${l.id}/`,y="";try{y=await this.plugin.app.vault.adapter.read(`${p}manifest.json`)}catch(m){if(m.errno===-4058||m.errno===-2)return await this.addPlugin(e,!1,h,!1,o,!1,r,g),!0;console.log("BRAT - Local Manifest Load",l.id,JSON.stringify(m,null,2))}if(o!==""||this.plugin.settings.pluginSubListFrozenVersion.map(m=>m.repo).includes(e))return c(this.plugin,`The version of ${e} is frozen, not updating.`,3),!1;let b=await JSON.parse(y);if(b.version!==l.version){let m=await P();if(m===null)return!1;if(t){let f=`There is an update available for ${l.id} from version ${b.version} to ${l.version}. `;await this.plugin.log(`${f}[Release Info](https://github.com/${e}/releases/tag/${l.version})`,!0),c(this.plugin,f,30,()=>{l&&window.open(`https://github.com/${e}/releases/tag/${l.version}`)})}else{await this.writeReleaseFilesToPluginFolder(l.id,m),await this.plugin.app.plugins.loadManifests(),await this.reloadPlugin(l.id);let f=`${l.id}
Plugin has been updated from version ${b.version} to ${l.version}. `;await this.plugin.log(`${f}[Release Info](https://github.com/${e}/releases/tag/${l.version})`,!0),c(this.plugin,f,30,()=>{l&&window.open(`https://github.com/${e}/releases/tag/${l.version}`)})}}else n&&c(this.plugin,`No update available for ${e}`,3)}return!0}async reloadPlugin(e){let{plugins:i}=this.plugin.app;try{await i.disablePlugin(e),await i.enablePlugin(e)}catch(t){this.plugin.settings.debuggingMode&&console.log("reload plugin",t)}}async updatePlugin(e,i=!1,t=!1,n=!1){let o=await this.addPlugin(e,!0,i,t,"",n);return!o&&!i&&c(this.plugin,`${e}
Update of plugin failed.`),o}async checkForPluginUpdatesAndInstallUpdates(e=!1,i=!1){if(!await X()){console.log("BRAT: No internet detected.");return}let t,n="Checking for plugin updates STARTED";await this.plugin.log(n,!0),e&&this.plugin.settings.notificationsEnabled&&(t=new F.Notice(`BRAT
${n}`,3e4));let o=new Set(this.plugin.settings.pluginSubListFrozenVersion.map(r=>r.repo));for(let r of this.plugin.settings.pluginList)o.has(r)||await this.updatePlugin(r,i);let a="Checking for plugin updates COMPLETED";await this.plugin.log(a,!0),e&&(t&&t.hide(),c(this.plugin,a,10))}deletePlugin(e){let i=`Removed ${e} from BRAT plugin list`;this.plugin.log(i,!0),this.plugin.settings.pluginList=this.plugin.settings.pluginList.filter(t=>t!==e),this.plugin.settings.pluginSubListFrozenVersion=this.plugin.settings.pluginSubListFrozenVersion.filter(t=>t.repo!==e),this.plugin.saveSettings()}getEnabledDisabledPlugins(e){let i=this.plugin.app.plugins,t=Object.values(i.manifests),n=Object.values(i.plugins).map(o=>o.manifest);return e?t.filter(o=>n.find(a=>o.id===a.id)):t.filter(o=>!n.find(a=>o.id===a.id))}};var B=require("obsidian");var V=async(s,e,i)=>{let t=await L(e,!0,s.settings.debuggingMode);if(t||(t=await L(e,!1,s.settings.debuggingMode)),!t)return c(s,"There is no theme.css or theme-beta.css file in the root path of this repository, so there is no theme to install."),!1;let n=await Fe(e,s.settings.debuggingMode);if(!n)return c(s,"There is no manifest.json file in the root path of this repository, so theme cannot be installed."),!1;let o=await JSON.parse(n),a=(0,B.normalizePath)(pt(s)+o.name),{adapter:r}=s.app.vault;await r.exists(a)||await r.mkdir(a),await r.write((0,B.normalizePath)(`${a}/theme.css`),t),await r.write((0,B.normalizePath)(`${a}/manifest.json`),n),De(s,e,R(t));let g="";return i?(Be(s,e,t),g=`${o.name} theme installed from ${e}. `,setTimeout(()=>{s.app.customCss.setTheme(o.name)},500)):g=`${o.name} theme updated from ${e}.`,s.log(`${g}[Theme Info](https://github.com/${e})`,!1),c(s,g,20,()=>{window.open(`https://github.com/${e}`)}),!0},E=async(s,e)=>{if(!await X()){console.log("BRAT: No internet detected.");return}let i,t="Checking for beta theme updates STARTED";await s.log(t,!0),e&&s.settings.notificationsEnabled&&(i=new B.Notice(`BRAT
${t}`,3e4));for(let o of s.settings.themesList){let a=await O(o.repo,!0,s.settings.debuggingMode);a==="0"&&(a=await O(o.repo,!1,s.settings.debuggingMode)),console.log("BRAT: lastUpdateOnline",a),a!==o.lastUpdate&&await V(s,o.repo,!1)}let n="Checking for beta theme updates COMPLETED";(async()=>await s.log(n,!0))(),e&&(s.settings.notificationsEnabled&&i&&i.hide(),c(s,n))},ee=(s,e)=>{s.settings.themesList=s.settings.themesList.filter(t=>t.repo!==e),s.saveSettings();let i=`Removed ${e} from BRAT themes list and will no longer be updated. However, the theme files still exist in the vault. To remove them, go into Settings > Appearance and remove the theme.`;s.log(i,!0),c(s,i)},pt=s=>`${(0,B.normalizePath)(`${s.app.vault.configDir}/themes`)}/`;var te=require("obsidian");var A=class extends te.Modal{constructor(e,i=!1){super(e.app),this.plugin=e,this.address="",this.openSettingsTabAfterwards=i}async submitForm(){if(this.address==="")return;let e=this.address.replace("https://github.com/","");if(Le(this.plugin,e)){c(this.plugin,"This theme is already in the list for beta testing",10);return}await V(this.plugin,e,!0)&&this.close()}onOpen(){this.contentEl.createEl("h4",{text:"Github repository for beta theme:"}),this.contentEl.createEl("form",{},e=>{e.addClass("brat-modal"),new te.Setting(e).addText(n=>{n.setPlaceholder("Repository (example: https://github.com/GitubUserName/repository-name"),n.setValue(this.address),n.onChange(o=>{this.address=o.trim()}),n.inputEl.addEventListener("keydown",o=>{o.key==="Enter"&&this.address!==" "&&(o.preventDefault(),this.submitForm())}),n.inputEl.style.width="100%",window.setTimeout(()=>{let o=document.querySelector(".setting-item-info");o&&o.remove(),n.inputEl.focus()},10)}),e.createDiv("modal-button-container",n=>{n.createEl("button",{attr:{type:"button"},text:"Never mind"}).addEventListener("click",()=>{this.close()}),n.createEl("button",{attr:{type:"submit"},cls:"mod-cta",text:"Add Theme"})});let i=e.createDiv();i.style.borderTop="1px solid #ccc",i.style.marginTop="30px";let t=i.createSpan();t.innerHTML="BRAT by <a href='https://bit.ly/o42-twitter'>TFTHacker</a>",t.style.fontStyle="italic",i.appendChild(t),$(i,!1),window.setTimeout(()=>{let n=e.querySelectorAll(".brat-modal .setting-item-info");for(let o of Array.from(n))o.remove()},50),e.addEventListener("submit",n=>{n.preventDefault(),this.address!==""&&this.submitForm()})})}onClose(){this.openSettingsTabAfterwards&&(this.plugin.app.setting.openTab(),this.plugin.app.setting.openTabById(this.plugin.APP_ID))}};var Ee=require("obsidian"),T=class extends Ee.FuzzySuggestModal{constructor(i){super(i.app);this.data=[];this.scope.register(["Shift"],"Enter",t=>{this.enterTrigger(t)}),this.scope.register(["Ctrl"],"Enter",t=>{this.enterTrigger(t)})}setSuggesterData(i){this.data=i}display(i){this.callbackFunction=i,this.open()}getItems(){return this.data}getItemText(i){return i.display}onChooseItem(){}renderSuggestion(i,t){t.createEl("div",{text:i.item.display})}enterTrigger(i){var o;let t=(o=document.querySelector(".suggestion-item.is-selected div"))==null?void 0:o.textContent,n=this.data.find(a=>a.display===t);n&&(this.invokeCallback(n,i),this.close())}onChooseSuggestion(i,t){this.invokeCallback(i.item,t)}invokeCallback(i,t){typeof this.callbackFunction=="function"&&this.callbackFunction(i,t)}};var U=class{constructor(e){this.bratCommands=[{id:"AddBetaPlugin",icon:"BratIcon",name:"Plugins: Add a beta plugin for testing",showInRibbon:!0,callback:()=>{this.plugin.betaPlugins.displayAddNewPluginModal(!1,!1)}},{id:"AddBetaPluginWithFrozenVersion",icon:"BratIcon",name:"Plugins: Add a beta plugin with frozen version based on a release tag",showInRibbon:!0,callback:()=>{this.plugin.betaPlugins.displayAddNewPluginModal(!1,!0)}},{id:"checkForUpdatesAndUpdate",icon:"BratIcon",name:"Plugins: Check for updates to all beta plugins and UPDATE",showInRibbon:!0,callback:async()=>{await this.plugin.betaPlugins.checkForPluginUpdatesAndInstallUpdates(!0,!1)}},{id:"checkForUpdatesAndDontUpdate",icon:"BratIcon",name:"Plugins: Only check for updates to beta plugins, but don't Update",showInRibbon:!0,callback:async()=>{await this.plugin.betaPlugins.checkForPluginUpdatesAndInstallUpdates(!0,!0)}},{id:"updateOnePlugin",icon:"BratIcon",name:"Plugins: Choose a single plugin version to update",showInRibbon:!0,callback:()=>{let e=new Set(this.plugin.settings.pluginSubListFrozenVersion.map(n=>n.repo)),i=Object.values(this.plugin.settings.pluginList).filter(n=>!e.has(n)).map(n=>({display:n,info:n})),t=new T(this.plugin);t.setSuggesterData(i),t.display(n=>{let o=`Checking for updates for ${n.info}`;this.plugin.log(o,!0),c(this.plugin,`
${o}`,3),this.plugin.betaPlugins.updatePlugin(n.info,!1,!0)})}},{id:"reinstallOnePlugin",icon:"BratIcon",name:"Plugins: Choose a single plugin to reinstall",showInRibbon:!0,callback:()=>{let e=new Set(this.plugin.settings.pluginSubListFrozenVersion.map(n=>n.repo)),i=Object.values(this.plugin.settings.pluginList).filter(n=>!e.has(n)).map(n=>({display:n,info:n})),t=new T(this.plugin);t.setSuggesterData(i),t.display(n=>{let o=`Reinstalling ${n.info}`;c(this.plugin,`
${o}`,3),this.plugin.log(o,!0),this.plugin.betaPlugins.updatePlugin(n.info,!1,!1,!0)})}},{id:"restartPlugin",icon:"BratIcon",name:"Plugins: Restart a plugin that is already installed",showInRibbon:!0,callback:()=>{let e=Object.values(this.plugin.app.plugins.manifests).map(t=>({display:t.id,info:t.id})),i=new T(this.plugin);i.setSuggesterData(e),i.display(t=>{c(this.plugin,`${t.info}
Plugin reloading .....`,5),this.plugin.betaPlugins.reloadPlugin(t.info)})}},{id:"disablePlugin",icon:"BratIcon",name:"Plugins: Disable a plugin - toggle it off",showInRibbon:!0,callback:()=>{let e=this.plugin.betaPlugins.getEnabledDisabledPlugins(!0).map(t=>({display:`${t.name} (${t.id})`,info:t.id})),i=new T(this.plugin);i.setSuggesterData(e),i.display(t=>{this.plugin.log(`${t.display} plugin disabled`,!1),this.plugin.settings.debuggingMode&&console.log(t.info),this.plugin.app.plugins.disablePluginAndSave(t.info)})}},{id:"enablePlugin",icon:"BratIcon",name:"Plugins: Enable a plugin - toggle it on",showInRibbon:!0,callback:()=>{let e=this.plugin.betaPlugins.getEnabledDisabledPlugins(!1).map(t=>({display:`${t.name} (${t.id})`,info:t.id})),i=new T(this.plugin);i.setSuggesterData(e),i.display(t=>{this.plugin.log(`${t.display} plugin enabled`,!1),this.plugin.app.plugins.enablePluginAndSave(t.info)})}},{id:"openGitHubZRepository",icon:"BratIcon",name:"Plugins: Open the GitHub repository for a plugin",showInRibbon:!0,callback:async()=>{let e=await Ce(this.plugin.settings.debuggingMode);if(e){let i=Object.values(e).map(o=>({display:`Plugin: ${o.name}  (${o.repo})`,info:o.repo})),t=Object.values(this.plugin.settings.pluginList).map(o=>({display:`BRAT: ${o}`,info:o}));for(let o of i)t.push(o);let n=new T(this.plugin);n.setSuggesterData(t),n.display(o=>{o.info&&window.open(`https://github.com/${o.info}`)})}}},{id:"openGitHubRepoTheme",icon:"BratIcon",name:"Themes: Open the GitHub repository for a theme (appearance)",showInRibbon:!0,callback:async()=>{let e=await Se(this.plugin.settings.debuggingMode);if(e){let i=Object.values(e).map(n=>({display:`Theme: ${n.name}  (${n.repo})`,info:n.repo})),t=new T(this.plugin);t.setSuggesterData(i),t.display(n=>{n.info&&window.open(`https://github.com/${n.info}`)})}}},{id:"opentPluginSettings",icon:"BratIcon",name:"Plugins: Open Plugin Settings Tab",showInRibbon:!0,callback:()=>{let e=this.plugin.app.setting,i=Object.values(e.pluginTabs).map(o=>({display:`Plugin: ${o.name}`,info:o.id})),t=new T(this.plugin),n=Object.values(e.settingTabs).map(o=>({display:`Core: ${o.name}`,info:o.id}));for(let o of i)n.push(o);t.setSuggesterData(n),t.display(o=>{e.open(),e.openTabById(o.info)})}},{id:"GrabBetaTheme",icon:"BratIcon",name:"Themes: Grab a beta theme for testing from a Github repository",showInRibbon:!0,callback:()=>{new A(this.plugin).open()}},{id:"updateBetaThemes",icon:"BratIcon",name:"Themes: Update beta themes",showInRibbon:!0,callback:async()=>{await E(this.plugin,!0)}},{id:"allCommands",icon:"BratIcon",name:"All Commands list",showInRibbon:!1,callback:()=>{this.ribbonDisplayCommands()}}];this.plugin=e;for(let i of this.bratCommands)this.plugin.addCommand({id:i.id,name:i.name,icon:i.icon,callback:()=>{i.callback()}})}ribbonDisplayCommands(){let e=[];for(let a of this.bratCommands)a.showInRibbon&&e.push({display:a.name,info:a.callback});let i=new T(this.plugin),t=this.plugin.app.setting,n=Object.values(t.settingTabs).map(a=>({display:`Core: ${a.name}`,info:()=>{t.open(),t.openTabById(a.id)}})),o=Object.values(t.pluginTabs).map(a=>({display:`Plugin: ${a.name}`,info:()=>{t.open(),t.openTabById(a.id)}}));e.push({display:"---- Core Plugin Settings ----",info:()=>{this.ribbonDisplayCommands()}});for(let a of n)e.push(a);e.push({display:"---- Plugin Settings ----",info:()=>{this.ribbonDisplayCommands()}});for(let a of o)e.push(a);i.setSuggesterData(e),i.display(a=>{typeof a.info=="function"&&a.info()})}};var v=require("obsidian");var ie=class extends v.PluginSettingTab{constructor(e,i){super(e,i),this.plugin=i}display(){let{containerEl:e}=this;e.empty(),new v.Setting(e).setName("Auto-enable plugins after installation").setDesc('If enabled beta plugins will be automatically enabled after installtion by default. Note: you can toggle this on and off for each plugin in the "Add Plugin" form.').addToggle(t=>{t.setValue(this.plugin.settings.enableAfterInstall),t.onChange(async n=>{this.plugin.settings.enableAfterInstall=n,await this.plugin.saveSettings()})}),new v.Setting(e).setName("Auto-update plugins at startup").setDesc("If enabled all beta plugins will be checked for updates each time Obsidian starts. Note: this does not update frozen version plugins.").addToggle(t=>{t.setValue(this.plugin.settings.updateAtStartup),t.onChange(async n=>{this.plugin.settings.updateAtStartup=n,await this.plugin.saveSettings()})}),new v.Setting(e).setName("Auto-update themes at startup").setDesc("If enabled all beta themes will be checked for updates each time Obsidian starts.").addToggle(t=>{t.setValue(this.plugin.settings.updateThemesAtStartup),t.onChange(async n=>{this.plugin.settings.updateThemesAtStartup=n,await this.plugin.saveSettings()})}),$(e,!0),e.createEl("hr"),new v.Setting(e).setName("Beta plugin list").setHeading(),e.createEl("div",{text:'The following is a list of beta plugins added via the command palette "Add a beta plugin for testing" or "Add a beta plugin with frozen version for testing". A frozen version is a specific release of a plugin based on its release tag. '}),e.createEl("p"),e.createEl("div",{text:"Click the x button next to a plugin to remove it from the list."}),e.createEl("p"),e.createEl("span").createEl("b",{text:"Note: "}),e.createSpan({text:"This does not delete the plugin, this should be done from the  Community Plugins tab in Settings."}),new v.Setting(e).addButton(t=>{t.setButtonText("Add Beta plugin"),t.onClick(()=>{this.plugin.app.setting.close(),this.plugin.betaPlugins.displayAddNewPluginModal(!0,!1)})});let i=new Set(this.plugin.settings.pluginSubListFrozenVersion.map(t=>t.repo));for(let t of this.plugin.settings.pluginList)i.has(t)||new v.Setting(e).setName(D(t)).addButton(n=>{n.setIcon("cross"),n.setTooltip("Delete this beta plugin"),n.onClick(()=>{if(n.buttonEl.textContent==="")n.setButtonText("Click once more to confirm removal");else{let{buttonEl:o}=n,{parentElement:a}=o;a!=null&&a.parentElement&&(a.parentElement.remove(),this.plugin.betaPlugins.deletePlugin(t))}})});new v.Setting(e).addButton(t=>{t.setButtonText("Add Beta plugin with frozen version"),t.onClick(()=>{this.plugin.app.setting.close(),this.plugin.betaPlugins.displayAddNewPluginModal(!0,!0)})});for(let t of this.plugin.settings.pluginSubListFrozenVersion)new v.Setting(e).setName(D(t.repo,` (version ${t.version})`)).addButton(n=>{n.setIcon("edit"),n.setTooltip("Change version"),n.onClick(()=>{this.plugin.app.setting.close(),this.plugin.betaPlugins.displayAddNewPluginModal(!0,!0,t.repo,t.version,t.token)})}).addButton(n=>{n.setIcon("cross"),n.setTooltip("Delete this beta plugin"),n.onClick(()=>{if(n.buttonEl.textContent==="")n.setButtonText("Click once more to confirm removal");else{let{buttonEl:o}=n,{parentElement:a}=o;a!=null&&a.parentElement&&(a.parentElement.remove(),this.plugin.betaPlugins.deletePlugin(t.repo))}})});new v.Setting(e).setName("Beta themes list").setHeading(),new v.Setting(e).addButton(t=>{t.setButtonText("Add Beta Theme"),t.onClick(()=>{this.plugin.app.setting.close(),new A(this.plugin).open()})});for(let t of this.plugin.settings.themesList)new v.Setting(e).setName(D(t.repo)).addButton(n=>{n.setIcon("cross"),n.setTooltip("Delete this beta theme"),n.onClick(()=>{if(n.buttonEl.textContent==="")n.setButtonText("Click once more to confirm removal");else{let{buttonEl:o}=n,{parentElement:a}=o;a!=null&&a.parentElement&&(a.parentElement.remove(),ee(this.plugin,t.repo))}})});new v.Setting(e).setName("Monitoring").setHeading(),new v.Setting(e).setName("Enable Notifications").setDesc("BRAT will provide popup notifications for its various activities. Turn this off means  no notifications from BRAT.").addToggle(t=>{t.setValue(this.plugin.settings.notificationsEnabled),t.onChange(async n=>{this.plugin.settings.notificationsEnabled=n,await this.plugin.saveSettings()})}),new v.Setting(e).setName("Enable Logging").setDesc("Plugin updates will be logged to a file in the log file.").addToggle(t=>{t.setValue(this.plugin.settings.loggingEnabled),t.onChange(async n=>{this.plugin.settings.loggingEnabled=n,await this.plugin.saveSettings()})}),new v.Setting(this.containerEl).setName("BRAT Log File Location").setDesc("Logs will be saved to this file. Don't add .md to the file name.").addSearch(t=>{t.setPlaceholder("Example: BRAT-log").setValue(this.plugin.settings.loggingPath).onChange(async n=>{this.plugin.settings.loggingPath=n,await this.plugin.saveSettings()})}),new v.Setting(e).setName("Enable Verbose Logging").setDesc("Get a lot  more information in  the log.").addToggle(t=>{t.setValue(this.plugin.settings.loggingVerboseEnabled),t.onChange(async n=>{this.plugin.settings.loggingVerboseEnabled=n,await this.plugin.saveSettings()})}),new v.Setting(e).setName("Debugging Mode").setDesc("Atomic Bomb level console logging. Can be used for troubleshoting and development.").addToggle(t=>{t.setValue(this.plugin.settings.debuggingMode),t.onChange(async n=>{this.plugin.settings.debuggingMode=n,await this.plugin.saveSettings()})}),new v.Setting(e).setName("Personal Access Token").setDesc("If you need to access private repositories, enter the personal access token here.").addText(t=>{var n;t.setPlaceholder("Enter your personal access token").setValue((n=this.plugin.settings.personalAccessToken)!=null?n:"").onChange(async o=>{this.plugin.settings.personalAccessToken=o,await this.plugin.saveSettings()})})}};var Me=require("obsidian");function Ie(){(0,Me.addIcon)("BratIcon",'<path fill="currentColor" stroke="currentColor"  d="M 41.667969 41.667969 C 41.667969 39.367188 39.800781 37.5 37.5 37.5 C 35.199219 37.5 33.332031 39.367188 33.332031 41.667969 C 33.332031 43.96875 35.199219 45.832031 37.5 45.832031 C 39.800781 45.832031 41.667969 43.96875 41.667969 41.667969 Z M 60.417969 58.582031 C 59.460938 58.023438 58.320312 57.867188 57.25 58.148438 C 56.179688 58.429688 55.265625 59.125 54.707031 60.082031 C 53.746094 61.777344 51.949219 62.820312 50 62.820312 C 48.050781 62.820312 46.253906 61.777344 45.292969 60.082031 C 44.734375 59.125 43.820312 58.429688 42.75 58.148438 C 41.679688 57.867188 40.539062 58.023438 39.582031 58.582031 C 37.597656 59.726562 36.910156 62.257812 38.042969 64.25 C 40.5 68.53125 45.0625 71.171875 50 71.171875 C 54.9375 71.171875 59.5 68.53125 61.957031 64.25 C 63.089844 62.257812 62.402344 59.726562 60.417969 58.582031 Z M 62.5 37.5 C 60.199219 37.5 58.332031 39.367188 58.332031 41.667969 C 58.332031 43.96875 60.199219 45.832031 62.5 45.832031 C 64.800781 45.832031 66.667969 43.96875 66.667969 41.667969 C 66.667969 39.367188 64.800781 37.5 62.5 37.5 Z M 50 8.332031 C 26.988281 8.332031 8.332031 26.988281 8.332031 50 C 8.332031 73.011719 26.988281 91.667969 50 91.667969 C 73.011719 91.667969 91.667969 73.011719 91.667969 50 C 91.667969 26.988281 73.011719 8.332031 50 8.332031 Z M 50 83.332031 C 33.988281 83.402344 20.191406 72.078125 17.136719 56.363281 C 14.078125 40.644531 22.628906 24.976562 37.5 19.042969 C 37.457031 19.636719 37.457031 20.238281 37.5 20.832031 C 37.5 27.738281 43.097656 33.332031 50 33.332031 C 52.300781 33.332031 54.167969 31.46875 54.167969 29.167969 C 54.167969 26.867188 52.300781 25 50 25 C 47.699219 25 45.832031 23.132812 45.832031 20.832031 C 45.832031 18.53125 47.699219 16.667969 50 16.667969 C 68.410156 16.667969 83.332031 31.589844 83.332031 50 C 83.332031 68.410156 68.410156 83.332031 50 83.332031 Z M 50 83.332031 " />')}var _=class{constructor(e){this.console=(e,...i)=>{console.log(`BRAT: ${e}`,...i)};this.themes={themeseCheckAndUpates:async e=>{await E(this.plugin,e)},themeInstallTheme:async e=>{let i=e.replace("https://github.com/","");await V(this.plugin,i,!0)},themesDelete:e=>{let i=e.replace("https://github.com/","");ee(this.plugin,i)},grabCommmunityThemeCssFile:async(e,i=!1)=>await L(e,i,this.plugin.settings.debuggingMode),grabChecksumOfThemeCssFile:async(e,i=!1)=>await O(e,i,this.plugin.settings.debuggingMode),grabLastCommitDateForFile:async(e,i)=>await Ae(e,i)};this.plugin=e}};var G=require("obsidian"),Ge=at(Qe());async function Ze(s,e,i=!1){if(s.settings.debuggingMode&&console.log(`BRAT: ${e}`),s.settings.loggingEnabled){if(!s.settings.loggingVerboseEnabled&&i)return;let t=`${s.settings.loggingPath}.md`,n=`[[${(0,G.moment)().format((0,Ge.getDailyNoteSettings)().format).toString()}]] ${(0,G.moment)().format("HH:mm")}`,o=window.require("os"),a=G.Platform.isDesktop?o.hostname():"MOBILE",r=`${n} ${a} ${e.replace(`
`," ")}
`,g=s.app.vault.getAbstractFileByPath(t);g?await s.app.vault.append(g,r):g=await s.app.vault.create(t,r)}}var ne=class extends Ke.Plugin{constructor(){super(...arguments);this.APP_NAME="BRAT";this.APP_ID="obsidian42-brat";this.settings=de;this.betaPlugins=new z(this);this.commands=new U(this);this.bratApi=new _(this);this.obsidianProtocolHandler=i=>{if(!i.plugin&&!i.theme){c(this,"Could not locate the repository from the URL.",10);return}for(let t of["plugin","theme"])if(i[t]){let n=t==="plugin"?new k(this,this.betaPlugins):new A(this);n.address=i[t],n.open();return}}}onload(){console.log(`loading ${this.APP_NAME}`),Ie(),this.addRibbonIcon("BratIcon","BRAT",()=>{this.commands.ribbonDisplayCommands()}),this.loadSettings().then(()=>{this.app.workspace.onLayoutReady(()=>{this.addSettingTab(new ie(this.app,this)),this.registerObsidianProtocolHandler("brat",this.obsidianProtocolHandler),this.settings.updateAtStartup&&setTimeout(()=>{this.betaPlugins.checkForPluginUpdatesAndInstallUpdates(!1)},6e4),this.settings.updateThemesAtStartup&&setTimeout(()=>{E(this,!1)},12e4),setTimeout(()=>{window.bratAPI=this.bratApi},500)})}).catch(i=>{console.error("Failed to load settings:",i)})}async log(i,t=!1){await Ze(this,i,t)}onunload(){console.log(`unloading ${this.APP_NAME}`)}async loadSettings(){this.settings=Object.assign({},de,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}};

/* nosourcemap */