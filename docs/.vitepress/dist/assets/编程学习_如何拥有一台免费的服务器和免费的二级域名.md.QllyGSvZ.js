import{_ as i,c as a,aN as n,o as t}from"./chunks/framework.C12FJ_o-.js";const l="/assets/Bxc8bACP6oRg1RxihKscp4C0nKc.B00tN1Ae.png",p="/assets/IqZDbSTL4ofUuRxZqqecqSIMnqd.DFfpt8hR.png",e="/assets/IV05bGZ6hoViPrxRxX6cmrOHnpe.wz2pnigs.png",h="/assets/W2JUbLNpBovVk1xeNAMcRtR9nhc.CjS0wZ_v.png",r="/assets/Ytq0bGltvoI0nzxBBf8cfQg0ncf.DLOiKZDU.png",o="/assets/RMujbApEUoW1QdxqPlNcoKnWnxa.CchOebpp.png",k="/assets/IvdCbhGvZomsGGxHww5c5GZbnhc.BN9hXT-8.png",d="/assets/SwVHbFUi6okgREx5Ddacvb3QnZd.CVp_6C_W.png",c="/assets/PTcwbBNUGoIP1jxPQChcobJ8nvH.fsFXN9Qb.png",g="/assets/GTiKbyuEjoIcXcx9Ek3cezs2nMe.BwjIarF1.png",F="/assets/XbcGbcBlOojKrMxDbHmc2IGOncz.5TDrRBJx.png",E="/assets/RY8YbN5OFozifGxKyeMczgBGnAh.DMT0cn6k.png",y="/assets/X1OsbyUBCoEeJFxjCGicgvCPny9.Gl4wePC_.png",u="/assets/Ppp0bP70XoL0Znx0Io5chrWnngg.BKR22iCV.png",C="/assets/JZBUbQK0mo1XGvxpY88cPlbunCb.JmW6IMbE.png",b="/assets/QyTgbMvDIoSzdExPHCrcvZL2nQb.8eyqIYwU.png",m="/assets/LP3gbPMWrogGjrxcHyqc8iwpnge.DXEgDCdo.png",B="/assets/O5DlbNrFKoyODAx9GORcDopTn5b.NpO9mU9_.png",_="/assets/M9qRbGx5LoqGCtxqsmocu1K9n4g.CE8M0qA8.png",f="/assets/LH0gb3Ar2oU7fbxOtiEcz2CYncf.B3nxynar.png",v="/assets/LA5xbarE1oFLxUxE2qvct1LZnOg.lrMZWdua.png",x="/assets/WReNbRuLZoYde4xrXGccfIsSnGP.C_wFhJtz.png",A="/assets/JHtsbPwhroNHZdxsL8Ycsd2Mneh.iTf7LGDj.png",P="/assets/CjdmbJ9F4oKz6OxJAticEtGAnEf.BM49jay6.png",q="/assets/KFPXbsjnFoApnyxLZJ2cHtycn2e.OtqVJ_EG.png",z="/assets/DpgUbRteLoOR5wxYKwwcB9b5n2e.rJepSuSn.png",D="/assets/OpfcbDzs6ogU0hxQO6cctvISnid.DwAyEfNL.png",S="/assets/KB5IbFYdIo6YnaxjKD5cUl6CnPf.IIwFQcdY.png",w="/assets/NLJGbA5cXo69ZFxLQWmcFNegntg.C-cU_hfO.png",H="/assets/Flo6bDt0roK4l5xK8woci7Mlnld.96XicNzz.png",I="/assets/TQoIbEQCWoHMVTxTt43cR93dnZd.BbcPaikA.png",G="/assets/FOvXbTZEKokYJLxo8Tbcw5TXnwL.P2tc1SwS.png",T="/assets/A7v4bLiIZoF2kTxRbd2clu2BnUd.CQNejtha.png",N="/assets/HevkbV821oT9iIxZxgbc3uHPnnb.CgkyzOcK.png",L="/assets/T6dLbaNKHooxHLxOJGzcAEaJnHg.C8SVDH-4.png",R="/assets/UWx1bS92koaEBExLau0cm6Ownxg.C1UpulMt.png",X=JSON.parse('{"title":"获取一台免费的服务器和免费的二级域名","description":"","frontmatter":{"title":"获取一台免费的服务器和免费的二级域名","date":"2025-01-11T00:00:00.000Z","details":"本文将教各位如何获得一台免费的个人服务器，并为其配置一个精美的控制面板以及免费的域名。","showInHome":true},"headers":[],"relativePath":"编程学习/如何拥有一台免费的服务器和免费的二级域名.md","filePath":"编程学习/如何拥有一台免费的服务器和免费的二级域名.md"}'),M={name:"编程学习/如何拥有一台免费的服务器和免费的二级域名.md"};function O(U,s,K,Z,Q,J){return t(),a("div",null,s[0]||(s[0]=[n('<h1 id="如何拥有一台免费的服务器和免费的二级域名" tabindex="-1">如何拥有一台免费的服务器和免费的二级域名 <a class="header-anchor" href="#如何拥有一台免费的服务器和免费的二级域名" aria-label="Permalink to &quot;如何拥有一台免费的服务器和免费的二级域名&quot;">​</a></h1><p>作者：张福轩，王云潮</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>拥有一台属于自己的服务器，就像拥有一位 24 小时待命的小兵，可以用它来学习 Linux、搭建网站、运行自动化脚本等，非常有趣。本文将教你如何获得一台免费的个人服务器，并为其配置一个精美的控制面板以及免费的域名。</p></div><h2 id="学生认证领取-aurze-免费服务器" tabindex="-1">学生认证领取 Aurze 免费服务器 <a class="header-anchor" href="#学生认证领取-aurze-免费服务器" aria-label="Permalink to &quot;学生认证领取 Aurze 免费服务器&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>微软 Azure 为学生提供免费的服务器，只需通过学生认证，即可获得一台 1 核 1G 内存的服务器（12 个月免费使用，附赠 100 美元的云服务额度）。认证过程只需使用<strong>学校邮箱</strong>。</p></div><h3 id="注册学校邮箱" tabindex="-1">注册学校邮箱 <a class="header-anchor" href="#注册学校邮箱" aria-label="Permalink to &quot;注册学校邮箱&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>进入<a href="https://mail.hrbeu.edu.cn/coremail/index.jsp?nodetect=true" target="_blank" rel="noreferrer">哈尔滨工程大学邮件系统</a>，点击右上角的注册按钮，即可完成校内用户的注册。</p></div><p><img src="'+l+'" alt="注册学校邮箱" loading="lazy"></p><h3 id="使用学校邮箱进行-aurze-学生认证" tabindex="-1">使用学校邮箱进行 Aurze 学生认证 <a class="header-anchor" href="#使用学校邮箱进行-aurze-学生认证" aria-label="Permalink to &quot;使用学校邮箱进行 Aurze 学生认证&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>进入<a href="https://azure.microsoft.com/zh-cn/free/students/" target="_blank" rel="noreferrer">面向学生的 Azure - 免费帐户额度 | Microsoft Azure</a></p></div><p><img src="'+p+'" alt="Aurze" loading="lazy"></p><ul><li><p>进入上述网址后，点击如图按钮，登录自己的<strong>微软账号</strong>，开始学生认证（如果没有微软账号，按照以下过程创建一个，以用 QQ 邮箱注册为例）</p><ul><li>进入设置界面，点击登录，然后创建用户，输入自己的 QQ 邮箱后，完成填写信息-接受验证码-人机验证的步骤就可以成功创建</li></ul></li><li><p>第二步就是进行<strong>学生验证</strong></p><p><img src="'+e+'" alt="学生验证" loading="lazy"></p><p>在填写信息的时候注意，名字和姓氏可以向图片中所示的那样随便一点，但是<strong>地区，学校，学校邮箱</strong>必须是真的，填写完信息以后点击<strong>验证学术地位</strong>，验证的时候会用<strong>学校邮箱</strong>发验证（发一次可能收不到，多发几次，一般两次就够了）</p><p><img src="'+h+'" alt="验证学术地位" loading="lazy"></p><p>点击上面的那个冒蓝光的 <code>url</code>，会跳转到一个页面</p><p><img src="'+r+'" alt="人机验证" loading="lazy"></p><p>点击 <code>start puzzle</code>，完成人机验证，再点击 <code>veritify</code>，就可以了。之后返回刚刚填写信息的页面，刷新一下</p><p><img src="'+o+'" alt="信息填写" loading="lazy"> 信息填写和刚刚差不多，和<strong>自己学校</strong>的吻合就可以，点击注册（<strong>一定要注意，电子邮箱还是<strong><strong>学校的邮箱</strong></strong>，要不然验证不通过</strong>） 通过以后就会跳转到新页面，接下来就是创建<strong>虚拟机</strong>了。</p></li></ul><h3 id="进入-aurze-注册免费服务器" tabindex="-1">进入 Aurze 注册免费服务器 <a class="header-anchor" href="#进入-aurze-注册免费服务器" aria-label="Permalink to &quot;进入 Aurze 注册免费服务器&quot;">​</a></h3><ul><li><p>创建虚拟机</p><ul><li>跳转后的页面刷新一下</li></ul></li></ul><p><img src="'+k+'" alt="创建虚拟机" loading="lazy"></p><p><img src="'+d+'" alt="免费试用额度" loading="lazy"></p><p>配置什么的按照图中的选就好，大小一定选带<strong>免费</strong>的，后面会有括号，括号里写着有<strong>免费试用额度</strong>，具体见上图，下拉菜单没有的话就点击<strong>查看所有大小</strong>（注意：虚拟机名称也是要填的）</p><p><img src="'+c+'" alt="用户名和密码" loading="lazy"></p><p>用户名和密码一定要记住，一会儿密码或者 <code>SSH</code> 连接用得着。</p><p><img src="'+g+'" alt="创建" loading="lazy"></p><p>剩下的就不用了，直接点击<strong>查看</strong>加<strong>创建</strong></p><p><img src="'+F+'" alt="创建" loading="lazy"></p><p>把手机号填了就可以创建了</p><p><img src="'+E+'" alt="创建" loading="lazy"></p><p>稍等一会儿就好了，点击转到资源</p><p><img src="'+y+'" alt="资源" loading="lazy"></p><p>这样的话服务器就创建好了</p><ul><li><p>转管理员权限</p><ul><li><p>由于对某些文件的编辑以及访问只有管理员才有权限，所以我们创建好服务器以后做的第一件事就是将普通用户转为 <code>root</code>（管理员），首先我们先远程连接我们的服务器。</p></li><li><p>我们打开电脑里的终端，根据自己的用户名和密码改动 <code>ssh your_name@your_server_ip</code>，就可以连接了。</p></li><li><p>之后我们对其进行更改，具体的操作见本文的安装 <code>1Panel</code> 部分。</p></li></ul></li><li><p>运维面板 <code>1panel</code> 的安装</p><p>相较于 <code>Windows</code> 图形化界面，直接使用终端利用命令实现对文件的修改有点麻烦，这里为了方便就需要安装一个 <code>1panel</code>，方便我们管理服务器中的资源，同样详见下面。</p></li></ul><h3 id="注册谷歌账号" tabindex="-1">注册谷歌账号 <a class="header-anchor" href="#注册谷歌账号" aria-label="Permalink to &quot;注册谷歌账号&quot;">​</a></h3><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>预警：后面的很多登录页面需要我们注册！但如果我们有<strong>Google 账号和 Gmail 邮箱</strong>，就会非常方便。 如果您因为<strong>网络问题</strong>无法访问谷歌，请忽略这一步，后面应该也可以使用微软账号和学校邮箱或 QQ 邮箱。</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>注册谷歌账号时有一个地方可能会踩坑，那就是会遇到我们的中国手机号会提示<strong>无法认证</strong>等问题。 下面，我们来讲解一下如何规避这个问题。</p><blockquote><p>参考文章：</p><ul><li><a href="https://blog.csdn.net/qaqwqaqwq/article/details/130442226" target="_blank" rel="noreferrer">关于注册Google账号时遇到“此电话号码无法用于进行验证”的问题的解决方法</a></li></ul></blockquote></div><ol><li><p>在准备注册之前，我们需要打开我们浏览器的<strong>设置</strong>，在语言一栏中添加<strong>英语</strong>，并<strong>以此语言显示浏览器界面的内容</strong>，同时把英文<strong>移到顶部</strong>。</p><p><img src="'+u+'" alt="英语" loading="lazy"></p></li><li><p>移除<strong>中文</strong>语言（注册完之后可以重新加上去）</p><p><img src="'+C+'" alt="英语" loading="lazy"></p></li><li><p>重新加载浏览器，然后打开<strong>无痕窗口</strong>，以此清除之前的记录</p></li></ol><h2 id="安装-1panel" tabindex="-1">安装 1Panel <a class="header-anchor" href="#安装-1panel" aria-label="Permalink to &quot;安装 1Panel&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><blockquote><p><code>1Panel</code> 是一个监控面板，可以监控服务器的情况并可视化，还可以方便地进行文件操作例如上传或是查看，同时它也会自带一个终端。并且它是一个网站，所以我们也可以在手机上远程控制服务器了。</p></blockquote></div><h3 id="允许-root-账号密码-密钥登录" tabindex="-1">允许 <code>root</code> 账号密码/密钥登录 <a class="header-anchor" href="#允许-root-账号密码-密钥登录" aria-label="Permalink to &quot;允许 `root` 账号密码/密钥登录&quot;">​</a></h3><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>下面是 <code>ChatGPT</code> 给出的教程，注意鉴别虚实。</p></div><p>要允许 <code>root</code> 用户登录，你需要修改 <code>SSH</code> 配置文件。以下是步骤：</p><p>并将其修改为：</p><h3 id="使用-termius-连接服务器或用终端使用-ssh-连接" tabindex="-1">使用 Termius 连接服务器或用终端使用 SSH 连接 <a class="header-anchor" href="#使用-termius-连接服务器或用终端使用-ssh-连接" aria-label="Permalink to &quot;使用 Termius 连接服务器或用终端使用 SSH 连接&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><blockquote><p><code>1Panel</code> 使用命令行下载，所以我们需要连接到服务器终端，下载 <code>Termius</code> 或使用 <code>ssh 用户名@IP 地址</code> 输入服务器用户和密码就可以连接上了。</p></blockquote></div><h3 id="安装-1panel-并配置端口信息" tabindex="-1">安装 1Panel 并配置端口信息 <a class="header-anchor" href="#安装-1panel-并配置端口信息" aria-label="Permalink to &quot;安装 1Panel 并配置端口信息&quot;">​</a></h3><ol><li>首先确保系统源已更新：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span></code></pre></div><ol><li><p>根据<a href="https://1panel.cn/docs/installation/online_installation/" target="_blank" rel="noreferrer">在线安装 - 1Panel 文档</a>，我们需要执行如下指令。</p><blockquote><p>代码的意思是先拉取 <code>test-docker.sh</code> 文件到当前文件夹，然后在当前文件夹执行该文件。</p></blockquote></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://resource.fit2cloud.com/1panel/package/quick_start.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> quick_start.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> quick_start.sh</span></span></code></pre></div><ol><li><p>然后根据指示，首先是设置安装路径，这里我们<strong>默认</strong>即可，什么都不填，直接回车。</p></li><li><p>之后是设置默认端口号，我们选取一个<strong>不常用的端口号</strong>填上，不要选择常用的数字或是简单的，最好选择大一些复杂的，但也注意不要超出端口范围。</p><p><img src="'+b+'" alt="不常用的端口号" loading="lazy"></p></li><li><p>假设我们选的是 <code>15215</code> 端口，后面我们要去 <code>Aurze</code> 的网络安全组开通这个端口号，所以这里先记下。之后我们进行下一步，设置 1Panel 安全入口，这里<strong>默认</strong>回车即可。</p></li><li><p>下一步是设置 1Panel 面板<strong>用户名和密码</strong>，这里既可以使用默认的随机名称和密码，也可以自己起一个，因为后面都可以在面板里更改。</p></li><li><p>最后一步是显示刚刚填的所有信息，我们需要<strong>全部复制保存下来</strong>，<strong>记住要保存</strong>！<strong>紫色划线的链接</strong>就是我们的<strong>面板网络地址</strong>，不过我们现在还不能访问，还需要在<em><strong>Aurze 云服务器</strong>上添加我们刚刚给我们的面板开放的</em><em>端口</em>*（也就是前面假设的 <code>15215</code> 端口，如果你设置了其他的，需要换成你自己的）。</p></li></ol><p><img src="'+m+'" alt="端口" loading="lazy"></p><h3 id="在-aurze-上开放-1panel-入站端口" tabindex="-1">在 Aurze 上开放 1Panel 入站端口 <a class="header-anchor" href="#在-aurze-上开放-1panel-入站端口" aria-label="Permalink to &quot;在 Aurze 上开放 1Panel 入站端口&quot;">​</a></h3><p>回到 <a href="https://portal.azure.com/" target="_blank" rel="noreferrer">Microsoft Azure</a>，我们找到<strong>网络设置</strong>，把我们的<strong>入站端口</strong>添加上就可以了。</p><p><img src="'+B+'" alt="入站端口" loading="lazy"></p><p>这里我们刚刚假设我们的面板端口是 <code>15215</code>，那么我们就将其添加上去，这样我们就可以访问了。</p><p><img src="'+_+'" alt="入站端口" loading="lazy"></p><h3 id="使用-ip-端口-访问面板" tabindex="-1">使用 <code>IP + 端口</code> 访问面板 <a class="header-anchor" href="#使用-ip-端口-访问面板" aria-label="Permalink to &quot;使用 `IP + 端口` 访问面板&quot;">​</a></h3><p>现在就可以刚刚的那个链接了，输入我们刚刚保存的用户名和密码，进入后页面如下，是不是特别酷。</p><p><img src="'+f+'" alt="面板" loading="lazy"></p><p>我们可以点击侧边栏中的<strong>系统</strong>，就可以使用服务器中的<strong>终端</strong>还有<strong>文件</strong>了。</p><h2 id="github-申请获取免费域名机会" tabindex="-1">GitHub 申请获取免费域名机会 <a class="header-anchor" href="#github-申请获取免费域名机会" aria-label="Permalink to &quot;GitHub 申请获取免费域名机会&quot;">​</a></h2><h3 id="注册-github-账号" tabindex="-1">注册 GitHub 账号 <a class="header-anchor" href="#注册-github-账号" aria-label="Permalink to &quot;注册 GitHub 账号&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>GitHub 是全球知名的代码托管平台，不过很多国内用户在访问的时候会遇到网络问题无法打开，这里我们可以使用软件<strong>Watt Toolkit</strong>来加速，微软商店即可下载。</p><p>本文我们注册 GitHub 的目的，是为了通过下面网站的 KYC 校验。不过 GitHub 本身也是一个非常好的一个学习开源代码以及代码协作的平台，相信不少读者已经使用过。</p><p>另外，建议在校时利用定位完成<strong>GitHub 的学生认证</strong>，会有更多好处。</p></div><h3 id="注册二级域名申请网站" tabindex="-1">注册二级域名申请网站 <a class="header-anchor" href="#注册二级域名申请网站" aria-label="Permalink to &quot;注册二级域名申请网站&quot;">​</a></h3><h3 id="注册-cloudflare" tabindex="-1">注册 Cloudflare <a class="header-anchor" href="#注册-cloudflare" aria-label="Permalink to &quot;注册 Cloudflare&quot;">​</a></h3><ol><li><p>进入 <a href="https://dash.cloudflare.com/login" target="_blank" rel="noreferrer">Cloudflare | Web Performance &amp; Security 官网</a>，按正常流程进入 cloudflare 并完成注册后，我们输入我们之前填的<strong>域名</strong>（也就是上一步中提示要 <strong>Name Server 的域名</strong>），点击继续。</p><p><img src="'+v+'" alt="域名" loading="lazy"></p></li><li><p>选择最底下免费的，点击<strong>继续</strong>。</p><p><img src="'+x+'" alt="继续" loading="lazy"></p></li><li><p>这时，我们就会看到我们想要的 <strong>Name Server</strong> 了，刚好两个，把这两个<strong>分别复制</strong>到我们之前抢注域名的网页就可以了，就是我让大家不要关闭的那个页面。</p><p><img src="'+A+'" alt="域名" loading="lazy"></p></li><li><p>复制完成后点击注册，我们就拥有了我们自己的域名了。<strong>半年后</strong>记得登录账号续下一年的。</p><p><img src="'+P+`" alt="注册" loading="lazy"></p></li></ol><h2 id="将域名和服务器的面板绑定到一起" tabindex="-1">将域名和服务器的面板绑定到一起 <a class="header-anchor" href="#将域名和服务器的面板绑定到一起" aria-label="Permalink to &quot;将域名和服务器的面板绑定到一起&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>现在，我们已经可以用 <code>ip:端口/安全入口</code> 的方式连接到我们的控制面板 <code>1Panel</code> 上了，访问 <code>1Panel</code>，点击侧边栏中的<strong>系统</strong>，我们就可以在这里操作终端，增删文件了。不过，我更希望不要这么赤裸裸地暴露我的 ip。例如，我想要给我的面板网页或是服务器的主页加一个<strong>域名</strong>。假设你之前注册的域名是 <code>username.us,kg</code>，那么我希望，面板的域名可以是在原先<strong>根域名</strong>的前面加上****<strong>board</strong><code>.username.us.kg</code>，或是其他的自定义域名。</p><p>下面，我们看一看如何实现。</p><blockquote><p>参考文章：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/138007915" target="_blank" rel="noreferrer">使用 Nginx 搭建反向代理</a></li></ul></blockquote></div><h3 id="安装-nginx" tabindex="-1">安装 Nginx <a class="header-anchor" href="#安装-nginx" aria-label="Permalink to &quot;安装 Nginx&quot;">​</a></h3><ol><li>更新源并安装 <code>Nginx</code></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span></span></code></pre></div><ol><li>安装完成后，输入下面的命令来验证它是否被启动</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span></span></code></pre></div><p>预计会出现下面的输出：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nginx.service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> high</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> performance</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> web</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reverse</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> proxy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     Loaded:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loaded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (/lib/systemd/system/nginx.service; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vendor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> preset:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     Active:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> active</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (running) since Sat 2020-05-02 20:25:43 UTC; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">13s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ago</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span></code></pre></div><ol><li><p>接下来我们测试是否安装成功，我们试一试访问我们的 IP。直接在浏览器输入你的 IP，如果是下面的这种界面，那么就证明安装成功了。</p><p><img src="`+q+'" alt="" loading="lazy"></p></li><li><p>这个欢迎界面好像有点简陋了，其实，这个页面的源代码的路径就在 <code>/var/www/html/index.nginx-debian.html</code>，我们可以自行修改成自己喜欢的页面，例如我放了一个好看的 404 背景，浏览器访问我的 IP 就会看到这样的背景图。</p><p><img src="'+z+'" alt="" loading="lazy"></p></li></ol><h3 id="注册-ssh-网站证书" tabindex="-1">注册 SSH 网站证书 <a class="header-anchor" href="#注册-ssh-网站证书" aria-label="Permalink to &quot;注册 SSH 网站证书&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>现在，我们已经实现了用 <strong>IP</strong> 或是 <strong>IP 搭配端口和安全入口</strong>访问我们的<strong>服务器 Nginx 主页</strong>和 <strong>1Panel 面板主页</strong>。接下来我们要做的就是用我们之前申请下来的<strong>免费域名</strong>，也就是刚刚举的 <code>user.us.kg</code> 域名来反向代理。</p></div><h3 id="使用-nginx-添加反向代理" tabindex="-1">使用 Nginx 添加反向代理 <a class="header-anchor" href="#使用-nginx-添加反向代理" aria-label="Permalink to &quot;使用 Nginx 添加反向代理&quot;">​</a></h3><ol><li><p>获取 SSL 网站证书后，下载压缩包，解压到本地的一个文件夹里，然后把这个文件夹的所有文件都上传到 <code>/var/www/certificates/</code> 里面。可以使用我们的 <strong>1Panel 面板的</strong>系统-&gt; 文件**功能来实现从本地批量拖拽上传，非常方便。</p></li><li><p>那么，我们的 <code>certiflcates</code> 文件夹下就会有 <code>/var/www/certificates/fullchain.crt</code> 和 <code>/var/www/certificates/private.pem</code> 了，再次<strong>检查核对路径正确</strong>后，进行下一步。</p></li><li><p>完成 IP Nginx 主页的反向代理（也就是前面可以改页面源代码放好看图片的那个），我们找到 <code>/etc/nginx</code> 文件夹，打开 <strong>nginx.conf</strong> 文件，这里就是我们的配置文件了，我们要增加的是 <code>http</code> 这一栏。</p><p><img src="'+D+'" alt="Nginx" loading="lazy"></p></li><li><p>翻到 http 的最后结尾处，把下面的代码加上，层级关系见下图。</p><p><img src="'+S+`" alt="http" loading="lazy"> 代码如下，注释里提到的需要改成自己的：</p></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## user.us.kg 首页面板</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        listen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        listen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 443</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># https</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 定义服务器的域名。当请求的域名与此匹配时，将使用这个服务器块处理请求。</span></span>
<span class="line diff add"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        server_name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ueser.us.kg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 这里放你的域名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 指定网站的根目录，所有相对路径的文件请求都将从这个目录开始查找。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www/html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 这个是你的证书的存放位置，注意该路径下你的文件是否存在，如自定义证书路径，请更改。</span></span>
<span class="line diff add"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ssl_certificate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www/certificates/fullchain.crt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请更改</span></span>
<span class="line diff add"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ssl_certificate_key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www/certificates/private.pem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请更改</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 定义默认的首页文件名。当用户请求根目录时，如果该文件存在，将返回该文件。</span></span>
<span class="line diff add"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    index</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index.html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 这里放你自己的首页前端 HTML 代码的文件名。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    location</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {#</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 尝试按照顺序查找文件：首先是请求的URI，如果不存在，则尝试添加斜杠查找目录，如果仍不存在，则返回404错误。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        try_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $uri $uri</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">404</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span></code></pre></div><ol start="5"><li>同理，我们也可以反向代理我们的 <code>1Panel</code> 面板，代码如下：</li></ol><blockquote><p><code>Board</code> 有面板的意思，所以我起了个这个名字，当然你们也可以自定义。</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## board.user.us.kg 1Panel面板</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            listen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            listen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 443</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line diff add"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            server_name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> board.user.us.kg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 这里放你的域名</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # 这个是你的证书的存放位置，注意该路径下你的文件是否存在，如自定义证书路径，请更改。</span></span>
<span class="line diff add"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            ssl_certificate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www/certificates/fullchain.crt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请更改</span></span>
<span class="line diff add"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            ssl_certificate_key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www/certificates/private.pem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请更改</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # Specify SSL settings</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            ssl_session_timeout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            ssl_session_cache</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shared:MozSSL:10m</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            ssl_session_tickets</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            ssl_protocols</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TLSv1.2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TLSv1.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            ssl_ciphers</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            ssl_prefer_server_ciphers</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # OCSP Stapling</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            ssl_stapling</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            ssl_stapling_verify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # Redirect HTTP to HTTPS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ($scheme = http) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 301</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$server_name$request_uri;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        location</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line diff add"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            proxy_pass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://127.0.0.1:12512</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 修改这个端口，变成你自己面板的端口。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            proxy_http_version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            proxy_read_timeout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $http_upgrade;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Connection</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;upgrade&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $http_host;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> X-Real-IP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $remote_addr;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> X-Real-PORT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $remote_port;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><ol start="6"><li><p>之后，我们记得保存文件。</p></li><li><p>来到服务器<strong>终端</strong>，首先<strong>检查</strong>改动是否正常，输入：</p></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span></span></code></pre></div><p>结果若为：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nginx:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> configuration</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nginx/nginx.conf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> syntax</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ok</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nginx:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> configuration</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nginx/nginx.conf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> successful</span></span></code></pre></div><p>则检查没问题。</p><ol start="8"><li>之后，更新一下我们的配置。（每次修改完 <code>Nginx</code> 配置文件后都要这么做）</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span></span></code></pre></div><p>Nginx 的配置就完成了，下面我们还差 <code>Cloudflare</code>。</p><h3 id="在-cloudflare-里将域名解析到我们对应的-ip-上" tabindex="-1">在 <code>Cloudflare</code> 里将域名解析到我们对应的 IP 上 <a class="header-anchor" href="#在-cloudflare-里将域名解析到我们对应的-ip-上" aria-label="Permalink to &quot;在 \`Cloudflare\` 里将域名解析到我们对应的 IP 上&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>现在，我们需要在 <code>Cloudflare</code> 上把我们的域名和 IP 绑定起来。首先我们绑定一下我们的面板 <code>board.\`\`user\`\`.us.kg</code> 到我们的 <code>IP</code>。注意类型选择 <code>A</code>，名称填写面板的范域名的前缀 <code>board</code>，点击 <code>保存</code>。</p></div><p><img src="`+w+'" alt="Cloudflare" loading="lazy"></p><blockquote><p>接下来是我们的根域名，注意名称这次填写 <code>@</code>，同样是填写你的 <code>IP</code>，点击 <code>保存</code>。</p></blockquote><p><img src="'+H+'" alt="IP" loading="lazy"></p><h3 id="设置-cloudflare-安全等级" tabindex="-1">设置 Cloudflare 安全等级 <a class="header-anchor" href="#设置-cloudflare-安全等级" aria-label="Permalink to &quot;设置 Cloudflare 安全等级&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><blockquote><p>参考文章：</p><ul><li><a href="https://nutswp.com/%E8%A7%A3%E5%86%B3%E4%BD%BF%E7%94%A8cloudflare%E5%87%BA%E7%8E%B0%E9%87%8D%E5%AE%9A%E5%90%91%E6%AC%A1%E8%BF%87%E5%A4%9A%E9%97%AE%E9%A2%98/" target="_blank" rel="noreferrer">解决使用 Cloudflare 出现重定向次过多问题 - 【NUTSWP】</a></li></ul></blockquote></div><p>当我们做好以上配置以后，放我们的默认页面，发现会出现这样一个页面</p><p><img src="'+I+'" alt="页面" loading="lazy"></p><p>对于这种情况，我们要进入 Cloudflare</p><p>首先选中自己的域名</p><p><img src="'+G+'" alt="域名" loading="lazy"></p><p><img src="'+T+'" alt="域名" loading="lazy"></p><p><img src="'+N+'" alt="域名" loading="lazy"></p><p><img src="'+L+'" alt="域名" loading="lazy"></p><p>然后保存就可以了，再输入自己的网址就可以正常跳转到页面了</p><p><img src="'+R+'" alt="域名" loading="lazy"></p>',105)]))}const Y=i(M,[["render",O]]);export{X as __pageData,Y as default};
